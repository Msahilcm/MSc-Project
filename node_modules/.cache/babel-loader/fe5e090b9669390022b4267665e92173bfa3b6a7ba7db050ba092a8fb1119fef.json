{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\project sahil\\\\MSc-Project\\\\src\\\\contexts\\\\CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cart, setCart] = useState([]);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      try {\n        setCart(JSON.parse(savedCart));\n      } catch (error) {\n        console.error('Error loading cart from localStorage:', error);\n        setCart([]);\n      }\n    }\n  }, []);\n\n  // Save cart to localStorage whenever cart changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1, selectedColor = null) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.id === product.id && item.selectedColor === selectedColor);\n      if (existingItemIndex > -1) {\n        // Update existing item quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex].quantity += quantity;\n        return updatedCart;\n      } else {\n        // Add new item\n        return [...prevCart, {\n          id: product.id,\n          name: product.name,\n          price: parseFloat(product.price),\n          originalPrice: parseFloat(product.originalPrice || product.price),\n          image: product.images ? typeof product.images === 'string' ? JSON.parse(product.images)[0] : product.images[0] : null,\n          quantity,\n          selectedColor,\n          stock: product.stock\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId, selectedColor = null) => {\n    setCart(prevCart => prevCart.filter(item => !(item.id === productId && item.selectedColor === selectedColor)));\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity, selectedColor = null) => {\n    if (quantity <= 0) {\n      removeFromCart(productId, selectedColor);\n      return;\n    }\n    setCart(prevCart => prevCart.map(item => item.id === productId && item.selectedColor === selectedColor ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear entire cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Get cart count (total number of items)\n  const getCartCount = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  // Get cart total price\n  const getCartTotal = () => {\n    return cart.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Get cart items\n  const getCartItems = () => {\n    return cart;\n  };\n  const value = {\n    cart,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    getCartCount,\n    getCartTotal,\n    getCartItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"gPYbNUmWK8tVVPcrFDrHV23HVlE=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","cart","setCart","savedCart","localStorage","getItem","JSON","parse","error","console","setItem","stringify","addToCart","product","quantity","selectedColor","prevCart","existingItemIndex","findIndex","item","id","updatedCart","name","price","parseFloat","originalPrice","image","images","stock","removeFromCart","productId","filter","updateQuantity","map","clearCart","getCartCount","reduce","total","getCartTotal","getCartItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/project sahil/MSc-Project/src/contexts/CartContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport const useCart = () => {\r\n  const context = useContext(CartContext);\r\n  if (!context) {\r\n    throw new Error('useCart must be used within a CartProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const CartProvider = ({ children }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  // Load cart from localStorage on component mount\r\n  useEffect(() => {\r\n    const savedCart = localStorage.getItem('cart');\r\n    if (savedCart) {\r\n      try {\r\n        setCart(JSON.parse(savedCart));\r\n      } catch (error) {\r\n        console.error('Error loading cart from localStorage:', error);\r\n        setCart([]);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Save cart to localStorage whenever cart changes\r\n  useEffect(() => {\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n  }, [cart]);\r\n\r\n  // Add item to cart\r\n  const addToCart = (product, quantity = 1, selectedColor = null) => {\r\n    setCart(prevCart => {\r\n      const existingItemIndex = prevCart.findIndex(\r\n        item => item.id === product.id && item.selectedColor === selectedColor\r\n      );\r\n\r\n      if (existingItemIndex > -1) {\r\n        // Update existing item quantity\r\n        const updatedCart = [...prevCart];\r\n        updatedCart[existingItemIndex].quantity += quantity;\r\n        return updatedCart;\r\n      } else {\r\n        // Add new item\r\n        return [...prevCart, {\r\n          id: product.id,\r\n          name: product.name,\r\n          price: parseFloat(product.price),\r\n          originalPrice: parseFloat(product.originalPrice || product.price),\r\n          image: product.images ? (typeof product.images === 'string' ? JSON.parse(product.images)[0] : product.images[0]) : null,\r\n          quantity,\r\n          selectedColor,\r\n          stock: product.stock\r\n        }];\r\n      }\r\n    });\r\n  };\r\n\r\n  // Remove item from cart\r\n  const removeFromCart = (productId, selectedColor = null) => {\r\n    setCart(prevCart => \r\n      prevCart.filter(item => !(item.id === productId && item.selectedColor === selectedColor))\r\n    );\r\n  };\r\n\r\n  // Update item quantity\r\n  const updateQuantity = (productId, quantity, selectedColor = null) => {\r\n    if (quantity <= 0) {\r\n      removeFromCart(productId, selectedColor);\r\n      return;\r\n    }\r\n\r\n    setCart(prevCart =>\r\n      prevCart.map(item =>\r\n        item.id === productId && item.selectedColor === selectedColor\r\n          ? { ...item, quantity }\r\n          : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // Clear entire cart\r\n  const clearCart = () => {\r\n    setCart([]);\r\n  };\r\n\r\n  // Get cart count (total number of items)\r\n  const getCartCount = () => {\r\n    return cart.reduce((total, item) => total + item.quantity, 0);\r\n  };\r\n\r\n  // Get cart total price\r\n  const getCartTotal = () => {\r\n    return cart.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n  };\r\n\r\n  // Get cart items\r\n  const getCartItems = () => {\r\n    return cart;\r\n  };\r\n\r\n  const value = {\r\n    cart,\r\n    addToCart,\r\n    removeFromCart,\r\n    updateQuantity,\r\n    clearCart,\r\n    getCartCount,\r\n    getCartTotal,\r\n    getCartItems\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}