{"ast":null,"code":"var _jsxFileName = \"D:\\\\Final Project\\\\fw-furniture\\\\src\\\\components\\\\ProductGrid.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ProductCard from './ProductCard';\nimport { productAPI } from '../services/api';\nimport './ProductGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductGrid = ({\n  selectedFilters,\n  sortBy\n}) => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Fetch products from API\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        setLoading(true);\n        const response = await productAPI.getAllProducts();\n        if (response.success) {\n          setProducts(response.data || []);\n        } else {\n          setError('Failed to fetch products');\n        }\n      } catch (error) {\n        setError('Error loading products');\n        console.error('Error fetching products:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProducts();\n  }, []);\n\n  // Filter products based on selected filters\n  const filteredProducts = products.filter(product => {\n    // Add your filtering logic here based on selectedFilters\n    return true; // For now, show all products\n  });\n\n  // Sort products based on sortBy\n  const sortedProducts = [...filteredProducts].sort((a, b) => {\n    switch (sortBy) {\n      case 'Price: Low to High':\n        return a.price - b.price;\n      case 'Price: High to Low':\n        return b.price - a.price;\n      case 'Rating: High to Low':\n        return b.rating - a.rating;\n      default:\n        return 0;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"product-grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"product-grid-title\",\n      children: \"Furniture For You!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"product-grid\",\n      children: sortedProducts.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n        product: product\n      }, product.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductGrid, \"3+N/VFIgZOBgubN9oS5aTzm2qqY=\");\n_c = ProductGrid;\nexport default ProductGrid;\nvar _c;\n$RefreshReg$(_c, \"ProductGrid\");","map":{"version":3,"names":["React","useState","useEffect","ProductCard","productAPI","jsxDEV","_jsxDEV","ProductGrid","selectedFilters","sortBy","_s","products","setProducts","loading","setLoading","error","setError","fetchProducts","response","getAllProducts","success","data","console","filteredProducts","filter","product","sortedProducts","sort","a","b","price","rating","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","id","_c","$RefreshReg$"],"sources":["D:/Final Project/fw-furniture/src/components/ProductGrid.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport ProductCard from './ProductCard';\r\nimport { productAPI } from '../services/api';\r\nimport './ProductGrid.css';\r\n\r\nconst ProductGrid = ({ selectedFilters, sortBy }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Fetch products from API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await productAPI.getAllProducts();\r\n        if (response.success) {\r\n          setProducts(response.data || []);\r\n        } else {\r\n          setError('Failed to fetch products');\r\n        }\r\n      } catch (error) {\r\n        setError('Error loading products');\r\n        console.error('Error fetching products:', error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Filter products based on selected filters\r\n  const filteredProducts = products.filter(product => {\r\n    // Add your filtering logic here based on selectedFilters\r\n    return true; // For now, show all products\r\n  });\r\n\r\n  // Sort products based on sortBy\r\n  const sortedProducts = [...filteredProducts].sort((a, b) => {\r\n    switch (sortBy) {\r\n      case 'Price: Low to High':\r\n        return a.price - b.price;\r\n      case 'Price: High to Low':\r\n        return b.price - a.price;\r\n      case 'Rating: High to Low':\r\n        return b.rating - a.rating;\r\n      default:\r\n        return 0;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div className=\"product-grid-container\">\r\n      <h2 className=\"product-grid-title\">Furniture For You!</h2>\r\n      <div className=\"product-grid\">\r\n        {sortedProducts.map(product => (\r\n          <ProductCard key={product.id} product={product} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductGrid; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}